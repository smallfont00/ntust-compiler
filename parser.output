Terminals unused in grammar

   BREAK
   CASE
   CLASS
   CONTINUE
   DO
   EXIT
   NULL_
   REPEAT
   TYPE
   EOL
   D_PERIOD
   D_SEMICOLON


State 1 conflicts: 1 shift/reduce
State 12 conflicts: 1 shift/reduce
State 26 conflicts: 1 shift/reduce
State 119 conflicts: 1 shift/reduce
State 121 conflicts: 1 shift/reduce
State 156 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: ol OBJECT identifer ol D_LBRACK $@1 ol declaration_list ol D_RBRACK ol

    3 identifer: ol IDENTIFIER

    4 line: LINE ol

    5 ol: %empty
    6   | LINE ol

    7 declaration_list: %empty
    8                 | declaration
    9                 | declaration_list line declaration

   10 declaration: val_dec
   11            | var_dec
   12            | arr_dec
   13            | fun_dec

   14 $@2: %empty

   15 fun_dec: DEF identifer D_LPAREN parameters D_RPAREN option_type $@2 block

   16 parameters: %empty
   17           | identifer type parameters_

   18 parameters_: %empty
   19            | D_COMMA identifer type parameters_

   20 arguments: %empty
   21          | expr arguments_

   22 arguments_: %empty
   23           | D_COMMA expr arguments_

   24 statement_list: %empty
   25               | statement
   26               | statement_list line statement

   27 statement: declaration
   28          | variable ASSIGN expr
   29          | expr
   30          | PRINT expr
   31          | PRINTLN expr
   32          | READ variable
   33          | EMPTY_RETURN
   34          | RETURN expr
   35          | block
   36          | loop
   37          | condition

   38 val_dec: VAL identifer option_type ASSIGN expr

   39 var_dec: VAR identifer option_type ASSIGN expr
   40        | VAR identifer option_type

   41 arr_dec: VAR identifer option_type D_LSQURE expr D_RSQURE

   42 type: D_COLON primitive

   43 option_type: %empty
   44            | type

   45 primitive: INT
   46          | FLOAT
   47          | BOOLEAN
   48          | STRING
   49          | CHAR

   50 $@3: %empty

   51 block: ol D_LBRACK $@3 ol statement_list ol D_RBRACK

   52 expr: value
   53     | NOT expr
   54     | D_LPAREN expr D_RPAREN
   55     | expr LT expr
   56     | expr LE expr
   57     | expr EQ expr
   58     | expr BE expr
   59     | expr BT expr
   60     | expr NE expr
   61     | expr AND expr
   62     | expr OR expr
   63     | expr MUL expr
   64     | expr DIV expr
   65     | expr ADD expr
   66     | expr MINUS expr
   67     | expr MOD expr
   68     | MINUS expr

   69 number: V_INT
   70       | V_FLOAT

   71 func_call: variable D_LPAREN arguments D_RPAREN

   72 value: TRUE
   73      | FALSE
   74      | number
   75      | func_call
   76      | variable
   77      | V_STRING
   78      | V_CHAR

   79 variable: identifer
   80         | variable D_LSQURE expr D_RSQURE

   81 loop: WHILE D_LPAREN expr D_RPAREN statement
   82     | FOR D_LPAREN variable D_LARROW expr TO expr D_RPAREN statement

   83 condition: IF D_LPAREN expr D_RPAREN ol statement
   84          | IF D_LPAREN expr D_RPAREN ol statement ELSE statement


Terminals, with rules where they appear

$end (0) 0
error (256)
BREAK (258)
CASE (259)
CLASS (260)
CONTINUE (261)
DEF (262) 15
DO (263)
ELSE (264) 84
EXIT (265)
FOR (266) 82
IF (267) 83 84
NULL_ (268)
OBJECT (269) 2
PRINT (270) 30
PRINTLN (271) 31
REPEAT (272)
RETURN (273) 34
TO (274) 82
TYPE (275)
VAL (276) 38
VAR (277) 39 40 41
WHILE (278) 81
EMPTY_RETURN (279) 33
INT (280) 45
FLOAT (281) 46
BOOLEAN (282) 47
STRING (283) 48
CHAR (284) 49
IDENTIFIER (285) 3
ADD (286) 65
MINUS (287) 66 68
MUL (288) 63
DIV (289) 64
MOD (290) 67
LT (291) 55
LE (292) 56
BE (293) 58
BT (294) 59
EQ (295) 57
NE (296) 60
AND (297) 61
OR (298) 62
NOT (299) 53
EOL (300)
LINE (301) 4 6
D_COMMA (302) 19 23
D_COLON (303) 42
D_PERIOD (304)
D_SEMICOLON (305)
D_LPAREN (306) 15 54 71 81 82 83 84
D_RPAREN (307) 15 54 71 81 82 83 84
D_LSQURE (308) 41 80
D_RSQURE (309) 41 80
D_LBRACK (310) 2 51
D_RBRACK (311) 2 51
D_LARROW (312) 82
ASSIGN (313) 28 38 39
TRUE (314) 72
FALSE (315) 73
V_INT (316) 69
V_FLOAT (317) 70
V_STRING (318) 77
V_CHAR (319) 78
READ (320) 32
UMINUS (321)
LOWER_THAN_ELSE (322)


Nonterminals, with rules where they appear

$accept (68)
    on left: 0
program (69)
    on left: 2, on right: 0
$@1 (70)
    on left: 1, on right: 2
identifer (71)
    on left: 3, on right: 2 15 17 19 38 39 40 41 79
line (72)
    on left: 4, on right: 9 26
ol (73)
    on left: 5 6, on right: 2 3 4 6 51 83 84
declaration_list (74)
    on left: 7 8 9, on right: 2 9
declaration (75)
    on left: 10 11 12 13, on right: 8 9 27
fun_dec (76)
    on left: 15, on right: 13
$@2 (77)
    on left: 14, on right: 15
parameters (78)
    on left: 16 17, on right: 15
parameters_ (79)
    on left: 18 19, on right: 17 19
arguments (80)
    on left: 20 21, on right: 71
arguments_ (81)
    on left: 22 23, on right: 21 23
statement_list (82)
    on left: 24 25 26, on right: 26 51
statement (83)
    on left: 27 28 29 30 31 32 33 34 35 36 37, on right: 25 26 81 82
    83 84
val_dec (84)
    on left: 38, on right: 10
var_dec (85)
    on left: 39 40, on right: 11
arr_dec (86)
    on left: 41, on right: 12
type (87)
    on left: 42, on right: 17 19 44
option_type (88)
    on left: 43 44, on right: 15 38 39 40 41
primitive (89)
    on left: 45 46 47 48 49, on right: 42
block (90)
    on left: 51, on right: 15 35
$@3 (91)
    on left: 50, on right: 51
expr (92)
    on left: 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68, on right:
    21 23 28 29 30 31 34 38 39 41 53 54 55 56 57 58 59 60 61 62 63
    64 65 66 67 68 80 81 82 83 84
number (93)
    on left: 69 70, on right: 74
func_call (94)
    on left: 71, on right: 75
value (95)
    on left: 72 73 74 75 76 77 78, on right: 52
variable (96)
    on left: 79 80, on right: 28 32 71 76 80 82
loop (97)
    on left: 81 82, on right: 36
condition (98)
    on left: 83 84, on right: 37


State 0

    0 $accept: . program $end

    LINE  shift, and go to state 1

    $default  reduce using rule 5 (ol)

    program  go to state 2
    ol       go to state 3


State 1

    6 ol: LINE . ol

    LINE  shift, and go to state 1

    LINE      [reduce using rule 5 (ol)]
    $default  reduce using rule 5 (ol)

    ol  go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    2 program: ol . OBJECT identifer ol D_LBRACK $@1 ol declaration_list ol D_RBRACK ol

    OBJECT  shift, and go to state 6


State 4

    6 ol: LINE ol .

    $default  reduce using rule 6 (ol)


State 5

    0 $accept: program $end .

    $default  accept


State 6

    2 program: ol OBJECT . identifer ol D_LBRACK $@1 ol declaration_list ol D_RBRACK ol

    LINE  shift, and go to state 1

    $default  reduce using rule 5 (ol)

    identifer  go to state 7
    ol         go to state 8


State 7

    2 program: ol OBJECT identifer . ol D_LBRACK $@1 ol declaration_list ol D_RBRACK ol

    LINE  shift, and go to state 1

    $default  reduce using rule 5 (ol)

    ol  go to state 9


State 8

    3 identifer: ol . IDENTIFIER

    IDENTIFIER  shift, and go to state 10


State 9

    2 program: ol OBJECT identifer ol . D_LBRACK $@1 ol declaration_list ol D_RBRACK ol

    D_LBRACK  shift, and go to state 11


State 10

    3 identifer: ol IDENTIFIER .

    $default  reduce using rule 3 (identifer)


State 11

    2 program: ol OBJECT identifer ol D_LBRACK . $@1 ol declaration_list ol D_RBRACK ol

    $default  reduce using rule 1 ($@1)

    $@1  go to state 12


State 12

    2 program: ol OBJECT identifer ol D_LBRACK $@1 . ol declaration_list ol D_RBRACK ol

    LINE  shift, and go to state 1

    LINE      [reduce using rule 5 (ol)]
    $default  reduce using rule 5 (ol)

    ol  go to state 13


State 13

    2 program: ol OBJECT identifer ol D_LBRACK $@1 ol . declaration_list ol D_RBRACK ol

    DEF  shift, and go to state 14
    VAL  shift, and go to state 15
    VAR  shift, and go to state 16

    $default  reduce using rule 7 (declaration_list)

    declaration_list  go to state 17
    declaration       go to state 18
    fun_dec           go to state 19
    val_dec           go to state 20
    var_dec           go to state 21
    arr_dec           go to state 22


State 14

   15 fun_dec: DEF . identifer D_LPAREN parameters D_RPAREN option_type $@2 block

    LINE  shift, and go to state 1

    $default  reduce using rule 5 (ol)

    identifer  go to state 23
    ol         go to state 8


State 15

   38 val_dec: VAL . identifer option_type ASSIGN expr

    LINE  shift, and go to state 1

    $default  reduce using rule 5 (ol)

    identifer  go to state 24
    ol         go to state 8


State 16

   39 var_dec: VAR . identifer option_type ASSIGN expr
   40        | VAR . identifer option_type
   41 arr_dec: VAR . identifer option_type D_LSQURE expr D_RSQURE

    LINE  shift, and go to state 1

    $default  reduce using rule 5 (ol)

    identifer  go to state 25
    ol         go to state 8


State 17

    2 program: ol OBJECT identifer ol D_LBRACK $@1 ol declaration_list . ol D_RBRACK ol
    9 declaration_list: declaration_list . line declaration

    LINE  shift, and go to state 26

    $default  reduce using rule 5 (ol)

    line  go to state 27
    ol    go to state 28


State 18

    8 declaration_list: declaration .

    $default  reduce using rule 8 (declaration_list)


State 19

   13 declaration: fun_dec .

    $default  reduce using rule 13 (declaration)


State 20

   10 declaration: val_dec .

    $default  reduce using rule 10 (declaration)


State 21

   11 declaration: var_dec .

    $default  reduce using rule 11 (declaration)


State 22

   12 declaration: arr_dec .

    $default  reduce using rule 12 (declaration)


State 23

   15 fun_dec: DEF identifer . D_LPAREN parameters D_RPAREN option_type $@2 block

    D_LPAREN  shift, and go to state 29


State 24

   38 val_dec: VAL identifer . option_type ASSIGN expr

    D_COLON  shift, and go to state 30

    $default  reduce using rule 43 (option_type)

    type         go to state 31
    option_type  go to state 32


State 25

   39 var_dec: VAR identifer . option_type ASSIGN expr
   40        | VAR identifer . option_type
   41 arr_dec: VAR identifer . option_type D_LSQURE expr D_RSQURE

    D_COLON  shift, and go to state 30

    $default  reduce using rule 43 (option_type)

    type         go to state 31
    option_type  go to state 33


State 26

    4 line: LINE . ol
    6 ol: LINE . ol

    LINE  shift, and go to state 1

    LINE      [reduce using rule 5 (ol)]
    $default  reduce using rule 5 (ol)

    ol  go to state 34


State 27

    9 declaration_list: declaration_list line . declaration

    DEF  shift, and go to state 14
    VAL  shift, and go to state 15
    VAR  shift, and go to state 16

    declaration  go to state 35
    fun_dec      go to state 19
    val_dec      go to state 20
    var_dec      go to state 21
    arr_dec      go to state 22


State 28

    2 program: ol OBJECT identifer ol D_LBRACK $@1 ol declaration_list ol . D_RBRACK ol

    D_RBRACK  shift, and go to state 36


State 29

   15 fun_dec: DEF identifer D_LPAREN . parameters D_RPAREN option_type $@2 block

    LINE  shift, and go to state 1

    D_RPAREN  reduce using rule 16 (parameters)
    $default  reduce using rule 5 (ol)

    identifer   go to state 37
    ol          go to state 8
    parameters  go to state 38


State 30

   42 type: D_COLON . primitive

    INT      shift, and go to state 39
    FLOAT    shift, and go to state 40
    BOOLEAN  shift, and go to state 41
    STRING   shift, and go to state 42
    CHAR     shift, and go to state 43

    primitive  go to state 44


State 31

   44 option_type: type .

    $default  reduce using rule 44 (option_type)


State 32

   38 val_dec: VAL identifer option_type . ASSIGN expr

    ASSIGN  shift, and go to state 45


State 33

   39 var_dec: VAR identifer option_type . ASSIGN expr
   40        | VAR identifer option_type .
   41 arr_dec: VAR identifer option_type . D_LSQURE expr D_RSQURE

    D_LSQURE  shift, and go to state 46
    ASSIGN    shift, and go to state 47

    $default  reduce using rule 40 (var_dec)


State 34

    4 line: LINE ol .
    6 ol: LINE ol .

    D_RBRACK  reduce using rule 6 (ol)
    $default  reduce using rule 4 (line)


State 35

    9 declaration_list: declaration_list line declaration .

    $default  reduce using rule 9 (declaration_list)


State 36

    2 program: ol OBJECT identifer ol D_LBRACK $@1 ol declaration_list ol D_RBRACK . ol

    LINE  shift, and go to state 1

    $default  reduce using rule 5 (ol)

    ol  go to state 48


State 37

   17 parameters: identifer . type parameters_

    D_COLON  shift, and go to state 30

    type  go to state 49


State 38

   15 fun_dec: DEF identifer D_LPAREN parameters . D_RPAREN option_type $@2 block

    D_RPAREN  shift, and go to state 50


State 39

   45 primitive: INT .

    $default  reduce using rule 45 (primitive)


State 40

   46 primitive: FLOAT .

    $default  reduce using rule 46 (primitive)


State 41

   47 primitive: BOOLEAN .

    $default  reduce using rule 47 (primitive)


State 42

   48 primitive: STRING .

    $default  reduce using rule 48 (primitive)


State 43

   49 primitive: CHAR .

    $default  reduce using rule 49 (primitive)


State 44

   42 type: D_COLON primitive .

    $default  reduce using rule 42 (type)


State 45

   38 val_dec: VAL identifer option_type ASSIGN . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 61
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 46

   41 arr_dec: VAR identifer option_type D_LSQURE . expr D_RSQURE

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 66
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 47

   39 var_dec: VAR identifer option_type ASSIGN . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 67
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 48

    2 program: ol OBJECT identifer ol D_LBRACK $@1 ol declaration_list ol D_RBRACK ol .

    $default  reduce using rule 2 (program)


State 49

   17 parameters: identifer type . parameters_

    D_COMMA  shift, and go to state 68

    $default  reduce using rule 18 (parameters_)

    parameters_  go to state 69


State 50

   15 fun_dec: DEF identifer D_LPAREN parameters D_RPAREN . option_type $@2 block

    D_COLON  shift, and go to state 30

    $default  reduce using rule 43 (option_type)

    type         go to state 31
    option_type  go to state 70


State 51

   68 expr: MINUS . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 71
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 52

   53 expr: NOT . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 72
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 53

   54 expr: D_LPAREN . expr D_RPAREN

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 73
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 54

   72 value: TRUE .

    $default  reduce using rule 72 (value)


State 55

   73 value: FALSE .

    $default  reduce using rule 73 (value)


State 56

   69 number: V_INT .

    $default  reduce using rule 69 (number)


State 57

   70 number: V_FLOAT .

    $default  reduce using rule 70 (number)


State 58

   77 value: V_STRING .

    $default  reduce using rule 77 (value)


State 59

   78 value: V_CHAR .

    $default  reduce using rule 78 (value)


State 60

   79 variable: identifer .

    $default  reduce using rule 79 (variable)


State 61

   38 val_dec: VAL identifer option_type ASSIGN expr .
   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD    shift, and go to state 74
    MINUS  shift, and go to state 75
    MUL    shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78
    LT     shift, and go to state 79
    LE     shift, and go to state 80
    BE     shift, and go to state 81
    BT     shift, and go to state 82
    EQ     shift, and go to state 83
    NE     shift, and go to state 84
    AND    shift, and go to state 85
    OR     shift, and go to state 86

    $default  reduce using rule 38 (val_dec)


State 62

   74 value: number .

    $default  reduce using rule 74 (value)


State 63

   75 value: func_call .

    $default  reduce using rule 75 (value)


State 64

   52 expr: value .

    $default  reduce using rule 52 (expr)


State 65

   71 func_call: variable . D_LPAREN arguments D_RPAREN
   76 value: variable .
   80 variable: variable . D_LSQURE expr D_RSQURE

    D_LPAREN  shift, and go to state 87
    D_LSQURE  shift, and go to state 88

    $default  reduce using rule 76 (value)


State 66

   41 arr_dec: VAR identifer option_type D_LSQURE expr . D_RSQURE
   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD       shift, and go to state 74
    MINUS     shift, and go to state 75
    MUL       shift, and go to state 76
    DIV       shift, and go to state 77
    MOD       shift, and go to state 78
    LT        shift, and go to state 79
    LE        shift, and go to state 80
    BE        shift, and go to state 81
    BT        shift, and go to state 82
    EQ        shift, and go to state 83
    NE        shift, and go to state 84
    AND       shift, and go to state 85
    OR        shift, and go to state 86
    D_RSQURE  shift, and go to state 89


State 67

   39 var_dec: VAR identifer option_type ASSIGN expr .
   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD    shift, and go to state 74
    MINUS  shift, and go to state 75
    MUL    shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78
    LT     shift, and go to state 79
    LE     shift, and go to state 80
    BE     shift, and go to state 81
    BT     shift, and go to state 82
    EQ     shift, and go to state 83
    NE     shift, and go to state 84
    AND    shift, and go to state 85
    OR     shift, and go to state 86

    $default  reduce using rule 39 (var_dec)


State 68

   19 parameters_: D_COMMA . identifer type parameters_

    LINE  shift, and go to state 1

    $default  reduce using rule 5 (ol)

    identifer  go to state 90
    ol         go to state 8


State 69

   17 parameters: identifer type parameters_ .

    $default  reduce using rule 17 (parameters)


State 70

   15 fun_dec: DEF identifer D_LPAREN parameters D_RPAREN option_type . $@2 block

    $default  reduce using rule 14 ($@2)

    $@2  go to state 91


State 71

   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr
   68     | MINUS expr .

    $default  reduce using rule 68 (expr)


State 72

   53 expr: NOT expr .
   55     | expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD    shift, and go to state 74
    MINUS  shift, and go to state 75
    MUL    shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78
    LT     shift, and go to state 79
    LE     shift, and go to state 80
    BE     shift, and go to state 81
    BT     shift, and go to state 82
    EQ     shift, and go to state 83
    NE     shift, and go to state 84

    $default  reduce using rule 53 (expr)


State 73

   54 expr: D_LPAREN expr . D_RPAREN
   55     | expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD       shift, and go to state 74
    MINUS     shift, and go to state 75
    MUL       shift, and go to state 76
    DIV       shift, and go to state 77
    MOD       shift, and go to state 78
    LT        shift, and go to state 79
    LE        shift, and go to state 80
    BE        shift, and go to state 81
    BT        shift, and go to state 82
    EQ        shift, and go to state 83
    NE        shift, and go to state 84
    AND       shift, and go to state 85
    OR        shift, and go to state 86
    D_RPAREN  shift, and go to state 92


State 74

   65 expr: expr ADD . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 93
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 75

   66 expr: expr MINUS . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 94
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 76

   63 expr: expr MUL . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 95
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 77

   64 expr: expr DIV . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 96
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 78

   67 expr: expr MOD . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 97
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 79

   55 expr: expr LT . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 98
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 80

   56 expr: expr LE . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 99
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 81

   58 expr: expr BE . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 100
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 82

   59 expr: expr BT . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 101
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 83

   57 expr: expr EQ . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 102
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 84

   60 expr: expr NE . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 103
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 85

   61 expr: expr AND . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 104
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 86

   62 expr: expr OR . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 105
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 87

   71 func_call: variable D_LPAREN . arguments D_RPAREN

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    D_RPAREN  reduce using rule 20 (arguments)
    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    arguments  go to state 106
    expr       go to state 107
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 88

   80 variable: variable D_LSQURE . expr D_RSQURE

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 108
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 89

   41 arr_dec: VAR identifer option_type D_LSQURE expr D_RSQURE .

    $default  reduce using rule 41 (arr_dec)


State 90

   19 parameters_: D_COMMA identifer . type parameters_

    D_COLON  shift, and go to state 30

    type  go to state 109


State 91

   15 fun_dec: DEF identifer D_LPAREN parameters D_RPAREN option_type $@2 . block

    LINE  shift, and go to state 1

    $default  reduce using rule 5 (ol)

    ol     go to state 110
    block  go to state 111


State 92

   54 expr: D_LPAREN expr D_RPAREN .

    $default  reduce using rule 54 (expr)


State 93

   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   65     | expr ADD expr .
   66     | expr . MINUS expr
   67     | expr . MOD expr

    MUL  shift, and go to state 76
    DIV  shift, and go to state 77
    MOD  shift, and go to state 78

    $default  reduce using rule 65 (expr)


State 94

   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   66     | expr MINUS expr .
   67     | expr . MOD expr

    MUL  shift, and go to state 76
    DIV  shift, and go to state 77
    MOD  shift, and go to state 78

    $default  reduce using rule 66 (expr)


State 95

   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   63     | expr MUL expr .
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    $default  reduce using rule 63 (expr)


State 96

   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   64     | expr DIV expr .
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    $default  reduce using rule 64 (expr)


State 97

   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr
   67     | expr MOD expr .

    $default  reduce using rule 67 (expr)


State 98

   55 expr: expr . LT expr
   55     | expr LT expr .
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD    shift, and go to state 74
    MINUS  shift, and go to state 75
    MUL    shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    $default  reduce using rule 55 (expr)


State 99

   55 expr: expr . LT expr
   56     | expr . LE expr
   56     | expr LE expr .
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD    shift, and go to state 74
    MINUS  shift, and go to state 75
    MUL    shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    $default  reduce using rule 56 (expr)


State 100

   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   58     | expr BE expr .
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD    shift, and go to state 74
    MINUS  shift, and go to state 75
    MUL    shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    $default  reduce using rule 58 (expr)


State 101

   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   59     | expr BT expr .
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD    shift, and go to state 74
    MINUS  shift, and go to state 75
    MUL    shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    $default  reduce using rule 59 (expr)


State 102

   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   57     | expr EQ expr .
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD    shift, and go to state 74
    MINUS  shift, and go to state 75
    MUL    shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    $default  reduce using rule 57 (expr)


State 103

   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   60     | expr NE expr .
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD    shift, and go to state 74
    MINUS  shift, and go to state 75
    MUL    shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78

    $default  reduce using rule 60 (expr)


State 104

   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   61     | expr AND expr .
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD    shift, and go to state 74
    MINUS  shift, and go to state 75
    MUL    shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78
    LT     shift, and go to state 79
    LE     shift, and go to state 80
    BE     shift, and go to state 81
    BT     shift, and go to state 82
    EQ     shift, and go to state 83
    NE     shift, and go to state 84

    $default  reduce using rule 61 (expr)


State 105

   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   62     | expr OR expr .
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD    shift, and go to state 74
    MINUS  shift, and go to state 75
    MUL    shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78
    LT     shift, and go to state 79
    LE     shift, and go to state 80
    BE     shift, and go to state 81
    BT     shift, and go to state 82
    EQ     shift, and go to state 83
    NE     shift, and go to state 84
    AND    shift, and go to state 85

    $default  reduce using rule 62 (expr)


State 106

   71 func_call: variable D_LPAREN arguments . D_RPAREN

    D_RPAREN  shift, and go to state 112


State 107

   21 arguments: expr . arguments_
   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD      shift, and go to state 74
    MINUS    shift, and go to state 75
    MUL      shift, and go to state 76
    DIV      shift, and go to state 77
    MOD      shift, and go to state 78
    LT       shift, and go to state 79
    LE       shift, and go to state 80
    BE       shift, and go to state 81
    BT       shift, and go to state 82
    EQ       shift, and go to state 83
    NE       shift, and go to state 84
    AND      shift, and go to state 85
    OR       shift, and go to state 86
    D_COMMA  shift, and go to state 113

    $default  reduce using rule 22 (arguments_)

    arguments_  go to state 114


State 108

   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr
   80 variable: variable D_LSQURE expr . D_RSQURE

    ADD       shift, and go to state 74
    MINUS     shift, and go to state 75
    MUL       shift, and go to state 76
    DIV       shift, and go to state 77
    MOD       shift, and go to state 78
    LT        shift, and go to state 79
    LE        shift, and go to state 80
    BE        shift, and go to state 81
    BT        shift, and go to state 82
    EQ        shift, and go to state 83
    NE        shift, and go to state 84
    AND       shift, and go to state 85
    OR        shift, and go to state 86
    D_RSQURE  shift, and go to state 115


State 109

   19 parameters_: D_COMMA identifer type . parameters_

    D_COMMA  shift, and go to state 68

    $default  reduce using rule 18 (parameters_)

    parameters_  go to state 116


State 110

   51 block: ol . D_LBRACK $@3 ol statement_list ol D_RBRACK

    D_LBRACK  shift, and go to state 117


State 111

   15 fun_dec: DEF identifer D_LPAREN parameters D_RPAREN option_type $@2 block .

    $default  reduce using rule 15 (fun_dec)


State 112

   71 func_call: variable D_LPAREN arguments D_RPAREN .

    $default  reduce using rule 71 (func_call)


State 113

   23 arguments_: D_COMMA . expr arguments_

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 118
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 114

   21 arguments: expr arguments_ .

    $default  reduce using rule 21 (arguments)


State 115

   80 variable: variable D_LSQURE expr D_RSQURE .

    $default  reduce using rule 80 (variable)


State 116

   19 parameters_: D_COMMA identifer type parameters_ .

    $default  reduce using rule 19 (parameters_)


State 117

   51 block: ol D_LBRACK . $@3 ol statement_list ol D_RBRACK

    $default  reduce using rule 50 ($@3)

    $@3  go to state 119


State 118

   23 arguments_: D_COMMA expr . arguments_
   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD      shift, and go to state 74
    MINUS    shift, and go to state 75
    MUL      shift, and go to state 76
    DIV      shift, and go to state 77
    MOD      shift, and go to state 78
    LT       shift, and go to state 79
    LE       shift, and go to state 80
    BE       shift, and go to state 81
    BT       shift, and go to state 82
    EQ       shift, and go to state 83
    NE       shift, and go to state 84
    AND      shift, and go to state 85
    OR       shift, and go to state 86
    D_COMMA  shift, and go to state 113

    $default  reduce using rule 22 (arguments_)

    arguments_  go to state 120


State 119

   51 block: ol D_LBRACK $@3 . ol statement_list ol D_RBRACK

    LINE  shift, and go to state 1

    LINE      [reduce using rule 5 (ol)]
    $default  reduce using rule 5 (ol)

    ol  go to state 121


State 120

   23 arguments_: D_COMMA expr arguments_ .

    $default  reduce using rule 23 (arguments_)


State 121

   51 block: ol D_LBRACK $@3 ol . statement_list ol D_RBRACK

    DEF           shift, and go to state 14
    FOR           shift, and go to state 122
    IF            shift, and go to state 123
    PRINT         shift, and go to state 124
    PRINTLN       shift, and go to state 125
    RETURN        shift, and go to state 126
    VAL           shift, and go to state 15
    VAR           shift, and go to state 16
    WHILE         shift, and go to state 127
    EMPTY_RETURN  shift, and go to state 128
    MINUS         shift, and go to state 51
    NOT           shift, and go to state 52
    LINE          shift, and go to state 1
    D_LPAREN      shift, and go to state 53
    TRUE          shift, and go to state 54
    FALSE         shift, and go to state 55
    V_INT         shift, and go to state 56
    V_FLOAT       shift, and go to state 57
    V_STRING      shift, and go to state 58
    V_CHAR        shift, and go to state 59
    READ          shift, and go to state 129

    LINE      [reduce using rule 24 (statement_list)]
    D_RBRACK  reduce using rule 24 (statement_list)
    $default  reduce using rule 5 (ol)

    identifer       go to state 60
    ol              go to state 130
    declaration     go to state 131
    fun_dec         go to state 19
    statement_list  go to state 132
    statement       go to state 133
    val_dec         go to state 20
    var_dec         go to state 21
    arr_dec         go to state 22
    block           go to state 134
    expr            go to state 135
    number          go to state 62
    func_call       go to state 63
    value           go to state 64
    variable        go to state 136
    loop            go to state 137
    condition       go to state 138


State 122

   82 loop: FOR . D_LPAREN variable D_LARROW expr TO expr D_RPAREN statement

    D_LPAREN  shift, and go to state 139


State 123

   83 condition: IF . D_LPAREN expr D_RPAREN ol statement
   84          | IF . D_LPAREN expr D_RPAREN ol statement ELSE statement

    D_LPAREN  shift, and go to state 140


State 124

   30 statement: PRINT . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 141
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 125

   31 statement: PRINTLN . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 142
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 126

   34 statement: RETURN . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 143
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 127

   81 loop: WHILE . D_LPAREN expr D_RPAREN statement

    D_LPAREN  shift, and go to state 144


State 128

   33 statement: EMPTY_RETURN .

    $default  reduce using rule 33 (statement)


State 129

   32 statement: READ . variable

    LINE  shift, and go to state 1

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    variable   go to state 145


State 130

    3 identifer: ol . IDENTIFIER
   51 block: ol . D_LBRACK $@3 ol statement_list ol D_RBRACK

    IDENTIFIER  shift, and go to state 10
    D_LBRACK    shift, and go to state 117


State 131

   27 statement: declaration .

    $default  reduce using rule 27 (statement)


State 132

   26 statement_list: statement_list . line statement
   51 block: ol D_LBRACK $@3 ol statement_list . ol D_RBRACK

    LINE  shift, and go to state 26

    $default  reduce using rule 5 (ol)

    line  go to state 146
    ol    go to state 147


State 133

   25 statement_list: statement .

    $default  reduce using rule 25 (statement_list)


State 134

   35 statement: block .

    $default  reduce using rule 35 (statement)


State 135

   29 statement: expr .
   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD    shift, and go to state 74
    MINUS  shift, and go to state 75
    MUL    shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78
    LT     shift, and go to state 79
    LE     shift, and go to state 80
    BE     shift, and go to state 81
    BT     shift, and go to state 82
    EQ     shift, and go to state 83
    NE     shift, and go to state 84
    AND    shift, and go to state 85
    OR     shift, and go to state 86

    $default  reduce using rule 29 (statement)


State 136

   28 statement: variable . ASSIGN expr
   71 func_call: variable . D_LPAREN arguments D_RPAREN
   76 value: variable .
   80 variable: variable . D_LSQURE expr D_RSQURE

    D_LPAREN  shift, and go to state 87
    D_LSQURE  shift, and go to state 88
    ASSIGN    shift, and go to state 148

    $default  reduce using rule 76 (value)


State 137

   36 statement: loop .

    $default  reduce using rule 36 (statement)


State 138

   37 statement: condition .

    $default  reduce using rule 37 (statement)


State 139

   82 loop: FOR D_LPAREN . variable D_LARROW expr TO expr D_RPAREN statement

    LINE  shift, and go to state 1

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    variable   go to state 149


State 140

   83 condition: IF D_LPAREN . expr D_RPAREN ol statement
   84          | IF D_LPAREN . expr D_RPAREN ol statement ELSE statement

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 150
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 141

   30 statement: PRINT expr .
   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD    shift, and go to state 74
    MINUS  shift, and go to state 75
    MUL    shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78
    LT     shift, and go to state 79
    LE     shift, and go to state 80
    BE     shift, and go to state 81
    BT     shift, and go to state 82
    EQ     shift, and go to state 83
    NE     shift, and go to state 84
    AND    shift, and go to state 85
    OR     shift, and go to state 86

    $default  reduce using rule 30 (statement)


State 142

   31 statement: PRINTLN expr .
   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD    shift, and go to state 74
    MINUS  shift, and go to state 75
    MUL    shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78
    LT     shift, and go to state 79
    LE     shift, and go to state 80
    BE     shift, and go to state 81
    BT     shift, and go to state 82
    EQ     shift, and go to state 83
    NE     shift, and go to state 84
    AND    shift, and go to state 85
    OR     shift, and go to state 86

    $default  reduce using rule 31 (statement)


State 143

   34 statement: RETURN expr .
   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD    shift, and go to state 74
    MINUS  shift, and go to state 75
    MUL    shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78
    LT     shift, and go to state 79
    LE     shift, and go to state 80
    BE     shift, and go to state 81
    BT     shift, and go to state 82
    EQ     shift, and go to state 83
    NE     shift, and go to state 84
    AND    shift, and go to state 85
    OR     shift, and go to state 86

    $default  reduce using rule 34 (statement)


State 144

   81 loop: WHILE D_LPAREN . expr D_RPAREN statement

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 151
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 145

   32 statement: READ variable .
   80 variable: variable . D_LSQURE expr D_RSQURE

    D_LSQURE  shift, and go to state 88

    $default  reduce using rule 32 (statement)


State 146

   26 statement_list: statement_list line . statement

    DEF           shift, and go to state 14
    FOR           shift, and go to state 122
    IF            shift, and go to state 123
    PRINT         shift, and go to state 124
    PRINTLN       shift, and go to state 125
    RETURN        shift, and go to state 126
    VAL           shift, and go to state 15
    VAR           shift, and go to state 16
    WHILE         shift, and go to state 127
    EMPTY_RETURN  shift, and go to state 128
    MINUS         shift, and go to state 51
    NOT           shift, and go to state 52
    LINE          shift, and go to state 1
    D_LPAREN      shift, and go to state 53
    TRUE          shift, and go to state 54
    FALSE         shift, and go to state 55
    V_INT         shift, and go to state 56
    V_FLOAT       shift, and go to state 57
    V_STRING      shift, and go to state 58
    V_CHAR        shift, and go to state 59
    READ          shift, and go to state 129

    $default  reduce using rule 5 (ol)

    identifer    go to state 60
    ol           go to state 130
    declaration  go to state 131
    fun_dec      go to state 19
    statement    go to state 152
    val_dec      go to state 20
    var_dec      go to state 21
    arr_dec      go to state 22
    block        go to state 134
    expr         go to state 135
    number       go to state 62
    func_call    go to state 63
    value        go to state 64
    variable     go to state 136
    loop         go to state 137
    condition    go to state 138


State 147

   51 block: ol D_LBRACK $@3 ol statement_list ol . D_RBRACK

    D_RBRACK  shift, and go to state 153


State 148

   28 statement: variable ASSIGN . expr

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 154
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 149

   80 variable: variable . D_LSQURE expr D_RSQURE
   82 loop: FOR D_LPAREN variable . D_LARROW expr TO expr D_RPAREN statement

    D_LSQURE  shift, and go to state 88
    D_LARROW  shift, and go to state 155


State 150

   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr
   83 condition: IF D_LPAREN expr . D_RPAREN ol statement
   84          | IF D_LPAREN expr . D_RPAREN ol statement ELSE statement

    ADD       shift, and go to state 74
    MINUS     shift, and go to state 75
    MUL       shift, and go to state 76
    DIV       shift, and go to state 77
    MOD       shift, and go to state 78
    LT        shift, and go to state 79
    LE        shift, and go to state 80
    BE        shift, and go to state 81
    BT        shift, and go to state 82
    EQ        shift, and go to state 83
    NE        shift, and go to state 84
    AND       shift, and go to state 85
    OR        shift, and go to state 86
    D_RPAREN  shift, and go to state 156


State 151

   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr
   81 loop: WHILE D_LPAREN expr . D_RPAREN statement

    ADD       shift, and go to state 74
    MINUS     shift, and go to state 75
    MUL       shift, and go to state 76
    DIV       shift, and go to state 77
    MOD       shift, and go to state 78
    LT        shift, and go to state 79
    LE        shift, and go to state 80
    BE        shift, and go to state 81
    BT        shift, and go to state 82
    EQ        shift, and go to state 83
    NE        shift, and go to state 84
    AND       shift, and go to state 85
    OR        shift, and go to state 86
    D_RPAREN  shift, and go to state 157


State 152

   26 statement_list: statement_list line statement .

    $default  reduce using rule 26 (statement_list)


State 153

   51 block: ol D_LBRACK $@3 ol statement_list ol D_RBRACK .

    $default  reduce using rule 51 (block)


State 154

   28 statement: variable ASSIGN expr .
   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr

    ADD    shift, and go to state 74
    MINUS  shift, and go to state 75
    MUL    shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78
    LT     shift, and go to state 79
    LE     shift, and go to state 80
    BE     shift, and go to state 81
    BT     shift, and go to state 82
    EQ     shift, and go to state 83
    NE     shift, and go to state 84
    AND    shift, and go to state 85
    OR     shift, and go to state 86

    $default  reduce using rule 28 (statement)


State 155

   82 loop: FOR D_LPAREN variable D_LARROW . expr TO expr D_RPAREN statement

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 158
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 156

   83 condition: IF D_LPAREN expr D_RPAREN . ol statement
   84          | IF D_LPAREN expr D_RPAREN . ol statement ELSE statement

    LINE  shift, and go to state 1

    LINE      [reduce using rule 5 (ol)]
    $default  reduce using rule 5 (ol)

    ol  go to state 159


State 157

   81 loop: WHILE D_LPAREN expr D_RPAREN . statement

    DEF           shift, and go to state 14
    FOR           shift, and go to state 122
    IF            shift, and go to state 123
    PRINT         shift, and go to state 124
    PRINTLN       shift, and go to state 125
    RETURN        shift, and go to state 126
    VAL           shift, and go to state 15
    VAR           shift, and go to state 16
    WHILE         shift, and go to state 127
    EMPTY_RETURN  shift, and go to state 128
    MINUS         shift, and go to state 51
    NOT           shift, and go to state 52
    LINE          shift, and go to state 1
    D_LPAREN      shift, and go to state 53
    TRUE          shift, and go to state 54
    FALSE         shift, and go to state 55
    V_INT         shift, and go to state 56
    V_FLOAT       shift, and go to state 57
    V_STRING      shift, and go to state 58
    V_CHAR        shift, and go to state 59
    READ          shift, and go to state 129

    $default  reduce using rule 5 (ol)

    identifer    go to state 60
    ol           go to state 130
    declaration  go to state 131
    fun_dec      go to state 19
    statement    go to state 160
    val_dec      go to state 20
    var_dec      go to state 21
    arr_dec      go to state 22
    block        go to state 134
    expr         go to state 135
    number       go to state 62
    func_call    go to state 63
    value        go to state 64
    variable     go to state 136
    loop         go to state 137
    condition    go to state 138


State 158

   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr
   82 loop: FOR D_LPAREN variable D_LARROW expr . TO expr D_RPAREN statement

    TO     shift, and go to state 161
    ADD    shift, and go to state 74
    MINUS  shift, and go to state 75
    MUL    shift, and go to state 76
    DIV    shift, and go to state 77
    MOD    shift, and go to state 78
    LT     shift, and go to state 79
    LE     shift, and go to state 80
    BE     shift, and go to state 81
    BT     shift, and go to state 82
    EQ     shift, and go to state 83
    NE     shift, and go to state 84
    AND    shift, and go to state 85
    OR     shift, and go to state 86


State 159

   83 condition: IF D_LPAREN expr D_RPAREN ol . statement
   84          | IF D_LPAREN expr D_RPAREN ol . statement ELSE statement

    DEF           shift, and go to state 14
    FOR           shift, and go to state 122
    IF            shift, and go to state 123
    PRINT         shift, and go to state 124
    PRINTLN       shift, and go to state 125
    RETURN        shift, and go to state 126
    VAL           shift, and go to state 15
    VAR           shift, and go to state 16
    WHILE         shift, and go to state 127
    EMPTY_RETURN  shift, and go to state 128
    MINUS         shift, and go to state 51
    NOT           shift, and go to state 52
    LINE          shift, and go to state 1
    D_LPAREN      shift, and go to state 53
    TRUE          shift, and go to state 54
    FALSE         shift, and go to state 55
    V_INT         shift, and go to state 56
    V_FLOAT       shift, and go to state 57
    V_STRING      shift, and go to state 58
    V_CHAR        shift, and go to state 59
    READ          shift, and go to state 129

    $default  reduce using rule 5 (ol)

    identifer    go to state 60
    ol           go to state 130
    declaration  go to state 131
    fun_dec      go to state 19
    statement    go to state 162
    val_dec      go to state 20
    var_dec      go to state 21
    arr_dec      go to state 22
    block        go to state 134
    expr         go to state 135
    number       go to state 62
    func_call    go to state 63
    value        go to state 64
    variable     go to state 136
    loop         go to state 137
    condition    go to state 138


State 160

   81 loop: WHILE D_LPAREN expr D_RPAREN statement .

    $default  reduce using rule 81 (loop)


State 161

   82 loop: FOR D_LPAREN variable D_LARROW expr TO . expr D_RPAREN statement

    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    LINE      shift, and go to state 1
    D_LPAREN  shift, and go to state 53
    TRUE      shift, and go to state 54
    FALSE     shift, and go to state 55
    V_INT     shift, and go to state 56
    V_FLOAT   shift, and go to state 57
    V_STRING  shift, and go to state 58
    V_CHAR    shift, and go to state 59

    $default  reduce using rule 5 (ol)

    identifer  go to state 60
    ol         go to state 8
    expr       go to state 163
    number     go to state 62
    func_call  go to state 63
    value      go to state 64
    variable   go to state 65


State 162

   83 condition: IF D_LPAREN expr D_RPAREN ol statement .
   84          | IF D_LPAREN expr D_RPAREN ol statement . ELSE statement

    ELSE  shift, and go to state 164

    $default  reduce using rule 83 (condition)


State 163

   55 expr: expr . LT expr
   56     | expr . LE expr
   57     | expr . EQ expr
   58     | expr . BE expr
   59     | expr . BT expr
   60     | expr . NE expr
   61     | expr . AND expr
   62     | expr . OR expr
   63     | expr . MUL expr
   64     | expr . DIV expr
   65     | expr . ADD expr
   66     | expr . MINUS expr
   67     | expr . MOD expr
   82 loop: FOR D_LPAREN variable D_LARROW expr TO expr . D_RPAREN statement

    ADD       shift, and go to state 74
    MINUS     shift, and go to state 75
    MUL       shift, and go to state 76
    DIV       shift, and go to state 77
    MOD       shift, and go to state 78
    LT        shift, and go to state 79
    LE        shift, and go to state 80
    BE        shift, and go to state 81
    BT        shift, and go to state 82
    EQ        shift, and go to state 83
    NE        shift, and go to state 84
    AND       shift, and go to state 85
    OR        shift, and go to state 86
    D_RPAREN  shift, and go to state 165


State 164

   84 condition: IF D_LPAREN expr D_RPAREN ol statement ELSE . statement

    DEF           shift, and go to state 14
    FOR           shift, and go to state 122
    IF            shift, and go to state 123
    PRINT         shift, and go to state 124
    PRINTLN       shift, and go to state 125
    RETURN        shift, and go to state 126
    VAL           shift, and go to state 15
    VAR           shift, and go to state 16
    WHILE         shift, and go to state 127
    EMPTY_RETURN  shift, and go to state 128
    MINUS         shift, and go to state 51
    NOT           shift, and go to state 52
    LINE          shift, and go to state 1
    D_LPAREN      shift, and go to state 53
    TRUE          shift, and go to state 54
    FALSE         shift, and go to state 55
    V_INT         shift, and go to state 56
    V_FLOAT       shift, and go to state 57
    V_STRING      shift, and go to state 58
    V_CHAR        shift, and go to state 59
    READ          shift, and go to state 129

    $default  reduce using rule 5 (ol)

    identifer    go to state 60
    ol           go to state 130
    declaration  go to state 131
    fun_dec      go to state 19
    statement    go to state 166
    val_dec      go to state 20
    var_dec      go to state 21
    arr_dec      go to state 22
    block        go to state 134
    expr         go to state 135
    number       go to state 62
    func_call    go to state 63
    value        go to state 64
    variable     go to state 136
    loop         go to state 137
    condition    go to state 138


State 165

   82 loop: FOR D_LPAREN variable D_LARROW expr TO expr D_RPAREN . statement

    DEF           shift, and go to state 14
    FOR           shift, and go to state 122
    IF            shift, and go to state 123
    PRINT         shift, and go to state 124
    PRINTLN       shift, and go to state 125
    RETURN        shift, and go to state 126
    VAL           shift, and go to state 15
    VAR           shift, and go to state 16
    WHILE         shift, and go to state 127
    EMPTY_RETURN  shift, and go to state 128
    MINUS         shift, and go to state 51
    NOT           shift, and go to state 52
    LINE          shift, and go to state 1
    D_LPAREN      shift, and go to state 53
    TRUE          shift, and go to state 54
    FALSE         shift, and go to state 55
    V_INT         shift, and go to state 56
    V_FLOAT       shift, and go to state 57
    V_STRING      shift, and go to state 58
    V_CHAR        shift, and go to state 59
    READ          shift, and go to state 129

    $default  reduce using rule 5 (ol)

    identifer    go to state 60
    ol           go to state 130
    declaration  go to state 131
    fun_dec      go to state 19
    statement    go to state 167
    val_dec      go to state 20
    var_dec      go to state 21
    arr_dec      go to state 22
    block        go to state 134
    expr         go to state 135
    number       go to state 62
    func_call    go to state 63
    value        go to state 64
    variable     go to state 136
    loop         go to state 137
    condition    go to state 138


State 166

   84 condition: IF D_LPAREN expr D_RPAREN ol statement ELSE statement .

    $default  reduce using rule 84 (condition)


State 167

   82 loop: FOR D_LPAREN variable D_LARROW expr TO expr D_RPAREN statement .

    $default  reduce using rule 82 (loop)
